"""
This file is part of PRINS.

Copyright (C) 2021 University of Luxembourg

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

SPDX-FileType: SOURCE
SPDX-FileCopyrightText: 2021 University of Luxembourg
SPDX-License-Identifier: GPL-3.0-or-later
"""

import os
import argparse
from src.main.PRINS import PRINS
from src.utils.common import common_logger

if __name__ == '__main__':

    # logger
    logger, timestamp = common_logger('run_PRINS')

    # argument parsing
    parser = argparse.ArgumentParser()
    parser.add_argument('system', help="System name",
                        type=str)
    parser.add_argument('structured_log_csv', help="Structured log file (csv) generated by LogPrep",
                        type=str)
    parser.add_argument('--output_dir', help="Output directory (default=./output/{SYSTEM})",
                        type=str, default='./output')
    parser.add_argument('--save_pdf', help="Try to save the resulting model as pdf (default=True)",
                        default=True, action='store_false')
    parser.add_argument('--timeout', help="MINT timeout (sec) (default=3600)",
                        type=int, default=3600)
    parser.add_argument('--num_workers', help="Number of processes in multiprocessing (default=4)",
                        type=int, default=4)
    parser.add_argument('--ignore_values', help="Set this if you want to ignore values (default=False)",
                        default=False, action='store_true')
    parser.add_argument('--det', help="(postprocessing) determinization technique (default=heuristic)",
                        type=str, default='heuristic')
    parser.add_argument('--use_pickle', help="Use pickled logs and component models (default=False)",
                        default=False, action='store_true')

    args = parser.parse_args()

    instance = PRINS(args.system, args.structured_log_csv, os.path.join(args.output_dir, args.system))
    m_sys, _, _, _ = instance.run(mint_timeout=args.timeout,
                                  ignore_values=args.ignore_values,
                                  save_pdf=args.save_pdf,
                                  det = args.det != 'none',
                                  num_workers=args.num_workers,
                                  use_pickle=args.use_pickle)
    if args.det != 'none':
        PRINS.postprocess(m_sys, determinize_technique=args.det, save_pdf=args.save_pdf, output_dir = os.path.join(args.output_dir, args.system))
    logger.info('run_PRINS ends without error(s).')
